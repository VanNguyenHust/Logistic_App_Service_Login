server.port=8081
#server.servlet.context-path=/rest/api

server.max-http-request-header-size=16KB
server.tomcat.max-swallow-size=4MB
server.tomcat.max-http-form-post-size=4MB

# Enable multipart uploads
spring.servlet.multipart.enabled=false

# Connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

#Postgre
#spring.datasource.url=jdbc:postgresql://localhost:5432/user_service
#spring.datasource.username=postgres
#spring.datasource.password=123456
spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST:103.77.183.4}:${POSTGRES_PORT:5432}/${POSTGRES_USERNAME:user_service}
spring.datasource.username=${POSTGRES_USER:postgres}
spring.datasource.password=${POSTGRES_PASSWORD:Str0ngPa5sVVord}

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

# messages
spring.messages.encoding=UTF-8
spring.messages.basename=i18n/messages
spring.messages.default-locale=en

#start enpoint
api.prefix: /api/v1/user-service

# Redis Server Configuration
#spring.data.redis.host=redis-16460.c1.asia-northeast1-1.gce.cloud.redislabs.com
#spring.data.redis.port=16460

spring.data.redis.use-redis-cache=true
spring.data.redis.host=localhost
spring.data.redis.port=6379

#Kafka
spring.kafka.bootstrap-servers=10.72.0.10:9092
spring.kafka.consumer.group-id=hust-logistic-dev

#Jwt
jwt.expiration=2592000
jwt.secretKey: a5RsQm2rhY3GMgD51qK3E+aYPoe5IsnfYD0QFydCoQ0=
jwt.expiration-refresh-token: 5184000

